Proiect 1 - Gestionarea Comenzilor de Pizza
Introducere:
    Să se dezvolte un sistem software implementat în C# (aplicație consolă) pentru 
    gestionarea comenzilor de pizza ale unei pizzerii. Sistemul va permite administrarea 
    meniului, gestionarea comenzilor și procesarea plăților. În același timp, aplicația va oferi 
    funcționalități de raportare pentru administratori.

Contextul Sistemului

    1. Pizzeria:
        o Are un nume, o adresă, și un meniu cu sortimente de pizza.
        o Acceptă comenzi plasate de clienți, care pot fi pentru livrare sau ridicare 
        din locație.
        o Stochează toate comenzile înregistrate într-o bază de date sau fișier.
    
    2. Pizza:
        o Fiecare tip de pizza are un nume, dimensiune (mică, medie, mare – tip 
        enumerare), preț de bază, și o listă de ingrediente.
        o Se pot crea două categorii principale de pizza:
            ▪ Standard: are un preț fix în funcție de dimensiune.
            ▪ Personalizată: clientul poate alege ingredientele dorite; prețul se 
        o Ingredientele au un nume și un cost asociat.
    
    3. Clienți:
        o Fiecare client are un nume, un număr de telefon, și un istoric de comenzi.
        o Numărul de telefon trebuie să respecte formatul unui număr de telefon din 
        România.
        o Dacă clientul nu este autentificat, poate doar vizualiza meniul.
        o Clienții fideli (care au plasat cel puțin 5 comenzi) beneficiază de o reducere 
        de 10%.
    
    4. Comenzile:
        o O comandă include: clientul, lista de pizza comandate, metoda de livrare 
        (ridicare sau livrare la domiciliu) și costul total.
        o Livrarea la domiciliu adaugă un cost fix de 10 RON.
        o Comenzile trebuie validate înainte de procesare (ex: pizza din comandă 
        trebuie să existe în meniu).


Funcționalități

Aplicația va permite:
1. Autentificare și înregistrare:
o Înregistrarea unui client nou.
o Autentificarea utilizatorilor existenți.

2. Gestionarea meniului (doar pentru administratori):
o Vizualizare lista completă a sortimentelor disponibile.
o Adăugare/ștergere sortimente de pizza.
o Modificarea informațiilor despre un sortiment (ex: lista de ingrediente, 
preț).
o Vizualizare lista ingrediente
o Modificare preț pentru un anumit ingredient 
o Adăugare/ștergere ingredient

3. Vizualizare istoric comenzi:
o Istoric comenzi pizzerie
o Vizualizarea istoricului comenzilor pentru un anumit client.

4. Gestionarea comenzilor:
o Vizualizarea meniului și plasarea unei comenzi de către clienți.
o Calcularea prețului total al comenzii (inclusiv eventuale reduceri sau 
costuri de livrare).

5. Raportare și statistici (doar pentru administratori):
o Vizualizarea comenzilor finalizate într-o anumită zi.
o Raport cu cele mai populare sortimente de pizza comandate.
o Raport cu totalul veniturilor generate de comenzi într-o anumită perioadă.

Cerințe Tehnice
1. Pentru nota maximă 8:
o Crearea unui model OO clar, utilizând corect conceptele POO 
(încapsulare, moștenire, polimorfism, compoziție).
o Salvarea și încărcarea stării aplicației într-un fișier (informații despre 
meniul și comenzile existente, etc).
o Tratarea situațiilor de eroare (ex: fișiere lipsă, date invalide).
o Utilizarea GitHub pentru versionare și colaborare.
o Documentarea și prezentarea evoluției aplicației.
2. Pentru nota maximă 10:
o Toate cerințele de mai sus.
o Izolarea funcționalităților externe folosind clase wrapper (pentru 
interacțiunea cu fișiere și consola).
o Utilizarea .NET Core GenericHost pentru gestionarea dependențelor.
o Logging folosind ILogger pentru colectarea informațiilor despre erori sau 
evenimente.
3. Cerințe opționale (puncte bonus):
o Stocarea alternativă a datelor într-o bază de date SQL.
o Utilizarea expresiilor LINQ pentru manipularea colecțiilor.
o Adăugarea unei funcționalități de notificare (email sau SMS) pentru 
confirmarea comenzilor.
o Implementarea unui modul de feedback pentru clienți (evaluarea 
comenzilor sau a sortimentelor).
o Crearea unui „framework” pentru a extinde aplicația la alte tipuri de 
restaurante.
o Crearea de teste unitare pentru validarea funcționalității claselor 
principale.